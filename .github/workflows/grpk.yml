name: "GRPK: deploy basemap"

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      type:
        description: Type
        required: true
        type: choice
        default: all
        options:
          - all
          - docker
          - styles
          - pmtiles-cdn

permissions: { }

env:
  GRPK_SOURCE_URL: https://dev-gis.biip.lt/tiles/static/grpk
  GRPK_GLYPHS_URL: https://dev-gis.biip.lt/tiles/static/font/{fontstack}/{range}

jobs:
  deploy-grpk-pmtiles-cdn:
    name: Deploy GRPK pmtiles to CDN
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: inputs.type == 'all' || inputs.type == 'pmtiles'
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Generate GRPK pmtiles
        run: ./gradlew -q run

      - name: Upload GRPK pmtiles artifact
        uses: actions/upload-artifact@v4
        with:
          name: grpk
          path: grpk/data/output
          if-no-files-found: error
          compression-level: 0

      - name: Sync to S3
        uses: docker://docker.io/rclone/rclone:1.66
        with:
          args: "sync grpk/data/output s3:/tiles/grpk --include grpk.pmtiles --s3-acl=public-read --fast-list --checksum --update --use-server-modtime --metadata --inplace --delete-during"
        env:
          RCLONE_CONFIG_S3_TYPE: s3
          RCLONE_CONFIG_S3_PROVIDER: Other
          RCLONE_CONFIG_S3_ENDPOINT: ${{ secrets.S3_BIIP_ENDPOINT }}
          RCLONE_CONFIG_S3_ACCESS_KEY_ID: ${{ secrets.S3_BIIP_ACCESS_KEY_ID }}
          RCLONE_CONFIG_S3_SECRET_ACCESS_KEY: ${{ secrets.S3_BIIP_SECRET_ACCESS_KEY }}

  deploy-grpk-styles-cdn:
    name: Deploy GRPK styles to CDN
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: inputs.type == 'all' || inputs.type == 'styles'
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Replace style urls for docker
        run: find grpk/styles -type f -name "style.json" -print0 | xargs -0 sed -i '' -e 's|${{ env.BASE_URL }}|${{ env.BASE_TARGET_URL }}|g'
        env:
          BASE_URL: http://localhost:3000/
          BASE_TARGET_URL: https://dev-gis.biip.lt/basemap/grpk/

      - name: Sync to S3
        uses: docker://docker.io/rclone/rclone:1.66
        with:
          args: "sync grpk/styles s3:/tiles/grpk/styles --s3-acl=public-read --fast-list --checksum --update --use-server-modtime --metadata --inplace --delete-during"
        env:
          RCLONE_CONFIG_S3_TYPE: s3
          RCLONE_CONFIG_S3_PROVIDER: Other
          RCLONE_CONFIG_S3_ENDPOINT: ${{ secrets.S3_BIIP_ENDPOINT }}
          RCLONE_CONFIG_S3_ACCESS_KEY_ID: ${{ secrets.S3_BIIP_ACCESS_KEY_ID }}
          RCLONE_CONFIG_S3_SECRET_ACCESS_KEY: ${{ secrets.S3_BIIP_SECRET_ACCESS_KEY }}

  generate-grpk-docker-image:
    name: Generate and push GRPK docker image
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event_name == 'push' || inputs.type == 'all' || inputs.type == 'docker'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build & tag docker image
        uses: AplinkosMinisterija/reusable-workflows/.github/actions/docker-build-tag-push@main
        with:
          docker-image: ghcr.io/aplinkosministerija/biip-grpk-basemap
          docker-context: .
          file: grpk/docker/Dockerfile
          environment: main
          no-cache: true
          push: true