name: "GRPK: pmtiles generate and deploy"

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: Deploy to S3
        type: boolean
        default: false
        required: true

permissions: { }

env:
  GRPK_SOURCE_URL: https://dev-gis.biip.lt/tiles/static/grpk
  GRPK_GLYPHS_URL: https://dev-gis.biip.lt/tiles/static/font/{fontstack}/{range}

jobs:
  generate-grpk-pmtiles:
    name: Generate GRPK pmtiles
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Generate GRPK pmtiles
        run: ./gradlew -q run

      - name: Copy styles
        run: cp -r grpk/styles grpk/data/output/styles

      - name: Replace GeoPortal style with non debug urls
        run: |
          jq '.sources.grpk = "${{ env.GRPK_SOURCE_URL }}"' style.json > tmp.json && mv tmp.json style.json
          jq -c '.glyphs = "${{ env.GRPK_GLYPHS_URL }}"' style.json > tmp.json && mv tmp.json style.json
        working-directory: grpk/data/output/styles/geoportal

      - name: Upload GRPK pmtiles artifact
        uses: actions/upload-artifact@v4
        with:
          name: grpk
          path: grpk/data/output
          if-no-files-found: error
          compression-level: 0

      - name: Sync to S3
        uses: docker://docker.io/rclone/rclone:1.66
        if: ${{ inputs.deploy }}
        with:
          args: "sync grpk/data/output s3:/tiles/grpk --s3-acl=public-read --fast-list --checksum --update --use-server-modtime --metadata --inplace --delete-during"
        env:
          RCLONE_CONFIG_S3_TYPE: s3
          RCLONE_CONFIG_S3_PROVIDER: Other
          RCLONE_CONFIG_S3_ENDPOINT: ${{ secrets.S3_BIIP_ENDPOINT }}
          RCLONE_CONFIG_S3_ACCESS_KEY_ID: ${{ secrets.S3_BIIP_ACCESS_KEY_ID }}
          RCLONE_CONFIG_S3_SECRET_ACCESS_KEY: ${{ secrets.S3_BIIP_SECRET_ACCESS_KEY }}

  generate-grpk-docker-image:
    name: Generate and push GRPK docker image
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build & tag docker image
        uses: AplinkosMinisterija/reusable-workflows/.github/actions/docker-build-tag-push@main
        with:
          docker-image: ghcr.io/biip-grpk-basemap
          docker-context: .
          file: grpk/docker/Dockerfile
          environment: main
          push: true