name: "Reusable workflow: publish basemap vector"

on:
  workflow_call:
    inputs:
      s3-endpoint:
        description: Required input to set S3 endpoint
        type: string
        required: true
      archive-version:
        description: Optional input to set PMTiles archive version
        type: string
        default: 0.0.0
      stable:
        description: Optional input to set if publish is stable
        type: boolean
        default: false

    secrets:
      s3-access-key-id:
        description: S3 access key id
        required: true
      s3-secret-access-key:
        description: S3 secret access key
        required: true

jobs:
  generate-basemap-vector-pmtiles:
    name: PMTiles to S3
    runs-on: ubuntu-latest
    timeout-minutes: 45
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Change version
        uses: dschanoeh/change-property@v1
        with:
          file: vector/config.properties
          property: archive_version
          value: ${{ inputs.archive-version }}

      - name: Generate PMTiles
        uses: ./.github/actions/basemap-vector-generate-pmtiles
        with:
          cache-data-sources: true

      - name: Upload PMTiles to S3
        uses: ./.github/actions/rclone-sync
        with:
          s3-endpoint: ${{ inputs.s3-endpoint }}
          s3-access-key-id: ${{ secrets.s3-access-key-id }}
          s3-secret-access-key: ${{ secrets.s3-secret-access-key }}
          source-path: vector/data/output
          destination-path: /tiles/vector/pmtiles

  publish-basemap-vector-docker-image:
    name: Martin docker image build and push
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.docker.outputs.digest }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Change version
        uses: dschanoeh/change-property@v1
        with:
          file: vector/config.properties
          property: archive_version
          value: ${{ inputs.archive-version }}

      - name: Build & tag docker image
        uses: AplinkosMinisterija/reusable-workflows/.github/actions/docker-build-tag-push@main
        id: docker
        with:
          docker-image: ghcr.io/govlt/national-basemap-vector
          docker-context: .
          file: vector/docker/Dockerfile
          environment: ${{ inputs.stable && 'stable' ||  'preview' }}
          no-cache: true
          push: true
          cache-from: ''
          cache-to: ''

  generate-basemap-vector-pbf-tiles:
    name: Generate vector basemap pbf tiles
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    needs:
      - publish-basemap-vector-docker-image
      - generate-basemap-vector-pmtiles
    services:
      martin:
        image: ghcr.io/govlt/national-basemap-vector@${{ needs.publish-basemap-vector-docker-image.outputs.digest }}
        ports:
          - 3000:3000
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: vector-basemap-pmtiles
          merge-multiple: true

      - name: Get all zxy combinations
        run: gunzip -c lithuania.pmtiles.layerstats.tsv.gz | awk -F'\t' '{print $1 "\t" $2 "\t" $3}' | uniq > zxy.tsv

      - name: Generate tiles.json
        run: curl http://localhost:3000/vector --create-dirs -o "tiles/tiles.json" --compressed -s -S

      - name: Change tiles url
        run: jq '.tiles = ["'"${TILES}"'"]' tiles.json > tiles.json.tmp && mv tiles.json.tmp tiles.json
        working-directory: tiles
        env:
          TILES: http://localhost:80/{z}/{x}/{y}.pbf

      - name: Generate pbfs
        run: tail -n +2 zxy.tsv | parallel --colsep '\t' curl "http://localhost:3000/vector/{1}/{2}/{3}" --create-dirs -s -S -o "tiles/{1}/{2}/{3}.pbf" --compressed

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          path: tiles
          name: pbf-tiles

  s3-upload-basemap-vector-pbf-tiles:
    name: S3 upload vector basemap pbf tiles
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: generate-basemap-vector-pbf-tiles
    permissions:
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: pbf-tiles
          path: tiles
          merge-multiple: true

      - name: Create tiles archive
        run: zip -r tiles.zip tiles

      - name: Upload to S3
        uses: govlt/national-basemap/.github/actions/rclone-sync@main
        with:
          s3-endpoint: ${{ inputs.s3-endpoint }}
          s3-access-key-id: ${{ secrets.s3-access-key-id }}
          s3-secret-access-key: ${{ secrets.s3-secret-access-key }}
          source-path: tiles.zip
          destination-path: /tiles/vector/pbf

  publish-basemap-vector-static-docker-image:
    name: Vector static docker image build and push
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: generate-basemap-vector-pbf-tiles
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: pbf-tiles
          path: vector/docker/static/tiles
          merge-multiple: true

      - name: Build & tag docker image
        uses: AplinkosMinisterija/reusable-workflows/.github/actions/docker-build-tag-push@main
        with:
          docker-image: ghcr.io/govlt/national-basemap-vector-static
          docker-context: vector/docker/static
          file: vector/docker/static/Dockerfile
          environment: ${{ inputs.stable && 'stable' ||  'preview' }}
          no-cache: true
          push: true
          cache-from: ''
          cache-to: ''
