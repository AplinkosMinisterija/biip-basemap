name: "POC: static vector basemap"

on:
  pull_request:

jobs:
  generate-vector-basemap:
    name: Generate vector basemap PMTiles
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PMTiles CLI
        run: |
          wget https://github.com/protomaps/go-pmtiles/releases/download/v1.19.1/go-pmtiles_1.19.1_Linux_x86_64.tar.gz && \
          tar -xzf go-pmtiles_1.19.1_Linux_x86_64.tar.gz && \
          rm go-pmtiles_1.19.1_Linux_x86_64.tar.gz && \
          mv pmtiles /usr/local/bin
      - run: pmtiles version

      - name: Generate vector basemap PMTiles
        uses: ./.github/actions/basemap-vector-generate-pmtiles
        with:
          artifact-retention-days: 1

  generate-vector-mvt-pbfs:
    name: Generate vector basemap MVT pbfs
    runs-on: ubuntu-latest
    timeout-minutes: 120
    needs: generate-vector-basemap
    permissions:
      contents: read
    steps:
      - name: Install PMTiles CLI
        run: |
          wget https://github.com/protomaps/go-pmtiles/releases/download/v1.19.1/go-pmtiles_1.19.1_Linux_x86_64.tar.gz && \
          tar -xzf go-pmtiles_1.19.1_Linux_x86_64.tar.gz && \
          rm go-pmtiles_1.19.1_Linux_x86_64.tar.gz && \
          mv pmtiles /usr/local/bin

      - uses: actions/download-artifact@v4
        with:
          name: vector-basemap-pmtiles
          merge-multiple: true

      - name: Get all zxy combinations
        run: gunzip -c lithuania.pmtiles.layerstats.tsv.gz | awk -F'\t' '{print $1 "\t" $2 "\t" $3}' | uniq > zxy.tsv


      - name: Generate mvt pbfs
        run: |
          # Read the TSV file line by line by skipping header
          tail -n +2 zxy.tsv  | while IFS=$'\t' read -r z x y; do
              directory="tiles/$z/$x"
              mkdir -p "$directory"

              pmtiles tile lithuania.pmtiles "$z" "$x" "$y" 1> "$directory/$y.pbf" &
          done

          wait

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: tiles

  publish-vector-mvt-pbfs:
    name: Publish vector basemap MVT pbfs
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: generate-vector-mvt-pbfs
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
