name: Continuous integration

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  actionlint:
    name: Lint GitHub Actions workflows
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check workflow files
        run: |
          echo "::add-matcher::.github/actionlint-matcher.json"
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color
        shell: bash

  maplibre-style-validate:
    name: Validate MapLibre style specifications
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install maplibre-gl-style-spec
        run: npm install @maplibre/maplibre-gl-style-spec --global

      - name: Validate MapLibre GL styles
        working-directory: vector/styles/geoportal
        run: |
          for file in *.json; do [[ -f "$file" ]] && echo "Validating file: $file" && gl-style-validate "$file"; done

  test-vector-basemap:
    name: Run vector basemap tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare Java environment
        uses: ./.github/actions/prepare-java-environment

      - name: Run tests
        run: ./gradlew test -i

  generate-vector-basemap-pmtiles:
    name: Generate vector basemap PMTiles
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event_name != 'push'
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate vector basemap PMTiles
        uses: ./.github/actions/basemap-vector-generate-pmtiles
        with:
          artifact-retention-days: ${{ github.ref == 'refs/heads/main' && 30 || 7 }}

  pull-request-comment-planetiler-statistics:
    name: Add Planetiler statistics to pull request
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'pull_request'
    needs: generate-vector-basemap-pmtiles
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Download logs
        uses: actions/download-artifact@v4
        with:
          name: logs-planetiler-basemap-vector
          merge-multiple: true

      - name: Extract only required statistics
        run: sed -n '/Tile stats/,$p' logs-planetiler-basemap-vector.txt | tr -cd '[:print:]\n\r' > tile-stats.txt

      - name: Prepare comment body
        run: |
          cat << EOF > comment-body.txt
          \`\`\`
          $(cat tile-stats.txt)
          \`\`\`
          EOF

      - name: Comment pull request
        uses: thollander/actions-comment-pull-request@v2
        with:
          comment_tag: tile-stats
          filePath: comment-body.txt

